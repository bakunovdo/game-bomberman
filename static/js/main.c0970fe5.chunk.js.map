{"version":3,"sources":["Classes/Objects.js","Classes/Bomb.js","Classes/Entities.js","utils.js","Classes/Game.js","App.js","index.js"],"names":["PrimitiveObject","x","y","this","DefaultPlayer","moved","isAlive","WhiteSpace","symbol","Wall","Box","Bomb","explSymbol","mapExploded","drawedMap","isExploded","explosionFinish","_sizeExplosion","_explosion","_countdown","explode","Player","inBombSymbol","Enemy","actionsTypes","moveUp","moveRight","moveDown","moveLeft","placeBomb","mapActions","id","action","getRandomRange","min","max","Math","ceil","floor","random","Game","options","height","mapHeight","width","mapWidth","keymap","moveDelay","enemiesCount","keymapArray","Object","values","AllEnemies","AllBombs","moveTimer","player","gameOver","legend","enemy","wall","space","wrap","bomb","box","explosion","blocks","W","S","B","classLevelMap","symbolsLevelMap","levelMap","prepare","init","createClassInMap","spawnPlayer","spawnAllEnemies","isWhiteSpace","bind","movePlayerHandler","document","addEventListener","setInterval","forEach","decreaseExplosion","decreaseCountdown","createMoveEnemy","createSpawnPoint","push","i","spawnEnemy","indexOf","e","Error","length","event","includes","code","filter","changeLevelMap","map","row","item","transformLevelToSymbol","renderBombs","renderPlayer","renderEnemies","deleteFinishedBobs","drawMapExplosion","exp","createPoint","matchEntityAtUp","matchEntityAtRight","matchEntityAtDown","matchEntityAtLeft","dx","dy","stopExplosion","dir","eX","eY","safeCheck","Entity","collisionWith","isBox","renderGame","join","clearInterval","removeEventListener","App","props","state","time","Date","now","interval","setState","className","render","React","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c0970fe5.chunk.js","sourcesContent":["export class PrimitiveObject {\r\n    constructor(x, y) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n}\r\n\r\nexport class DefaultPlayer extends PrimitiveObject {\r\n    constructor(x, y) {\r\n        super(x, y)\r\n        this.moved = false\r\n        this.isAlive = true\r\n    }\r\n\r\n    moveUp() {\r\n        if(!this.moved) {\r\n            this.y--\r\n            this.moved = true\r\n        }\r\n    }\r\n    moveRight() {\r\n        if(!this.moved) {\r\n            this.x++\r\n            this.moved = true\r\n        }\r\n    }\r\n    moveDown() {\r\n        if(!this.moved) {\r\n            this.y++\r\n            this.moved = true\r\n        }\r\n    }\r\n    moveLeft() {\r\n        if(!this.moved) {\r\n            this.x--\r\n            this.moved = true\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class WhiteSpace extends PrimitiveObject {\r\n    constructor(x, y) {\r\n        super(x, y)\r\n        this.symbol = \" \"\r\n    }\r\n}\r\n\r\nexport class Wall extends PrimitiveObject {\r\n    constructor(x, y) {\r\n        super(x, y)\r\n        this.symbol = \"■\"\r\n    }\r\n}\r\n\r\nexport class Box extends PrimitiveObject {\r\n    constructor(x, y) {\r\n        super(x, y)\r\n        this.symbol = \"□\"\r\n    }\r\n}","import {PrimitiveObject} from \"./Objects\";\r\n\r\nexport class Bomb extends PrimitiveObject {\r\n    constructor(x, y) {\r\n        super(x, y)\r\n\r\n        this.symbol = \"B\"\r\n        this.explSymbol = \"F\"\r\n\r\n        this.mapExploded = []\r\n        this.drawedMap = false\r\n\r\n        this.isExploded = false\r\n        this.explosionFinish = false\r\n\r\n        this._sizeExplosion = 3\r\n        this._explosion = 3\r\n        this._countdown = 6\r\n    }\r\n\r\n    decreaseCountdown() {\r\n        if (!this.isExploded) {\r\n            this._countdown > 0 ? this._countdown-- : this.explode()\r\n        }\r\n    }\r\n\r\n    decreaseExplosion() {\r\n        if (!this.explosionFinish && this.isExploded) {\r\n            this._explosion > 0 ? this._explosion-- : this.explosionFinish = true\r\n        }\r\n    }\r\n\r\n    createPoint(x, y) {\r\n        return {x, y}\r\n    }\r\n\r\n\r\n\r\n    explode() {\r\n        this.isExploded = true\r\n    }\r\n\r\n}","import {DefaultPlayer} from \"./Objects\";\r\n\r\nexport class Player extends DefaultPlayer {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this.symbol = \"P\"\r\n        this.inBombSymbol = \"₱\"\r\n    }\r\n}\r\n\r\nexport class Enemy extends DefaultPlayer {\r\n    constructor(x, y) {\r\n        super(x, y);\r\n        this.symbol = \"M\"\r\n        this.inBombSymbol = \"ᶆ\"\r\n\r\n        this.actionsTypes = {\r\n            moveUp: \"moveUp\",\r\n            moveRight: \"moveRight\",\r\n            moveDown: \"moveDown\",\r\n            moveLeft: \"moveLeft\",\r\n            placeBomb: \"placeBomb\",\r\n        }\r\n\r\n        this.mapActions = [\r\n            {id: 1, action: this.actionsTypes.moveUp},\r\n            {id: 2, action: this.actionsTypes.moveRight},\r\n            {id: 3, action: this.actionsTypes.moveDown},\r\n            {id: 4, action: this.actionsTypes.moveLeft},\r\n            {id: 5, action: this.actionsTypes.placeBomb},\r\n        ]\r\n    }\r\n}\r\n\r\n","export function getRandom(max) {\r\n    return Math.floor(Math.random() * Math.floor(max)+1);\r\n}\r\n\r\nexport function getRandomRange(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}","import {Box, Wall, WhiteSpace} from \"./Objects\";\r\nimport {Bomb} from \"./Bomb\";\r\nimport {Enemy, Player} from \"./Entities\";\r\nimport {getRandom, getRandomRange} from \"../utils\";\r\n\r\nexport class Game {\r\n    constructor(options) {\r\n        this.height = options.mapHeight\r\n        this.width = options.mapWidth\r\n        this.keymap = options.keymap\r\n        this.moveDelay = options.moveDelay\r\n        this.enemiesCount = options.enemiesCount\r\n\r\n        this.keymapArray = Object.values(this.keymap)\r\n\r\n        this.AllEnemies = []\r\n        this.AllBombs = []\r\n        this.moveTimer = null\r\n        this.player = null\r\n        this.gameOver = false\r\n\r\n        this.legend = {\r\n            player: \"P\",\r\n            enemy: \"M\",\r\n            wall: \"■\",\r\n            space: \" \",\r\n            wrap: \"\\n\",\r\n            bomb: \"B\",\r\n            box: \"□\",\r\n            explosion: \"F\"\r\n        }\r\n\r\n\r\n        this.blocks = [\r\n            this.legend.wall,\r\n            this.legend.bomb,\r\n            this.legend.box,\r\n            this.legend.enemy\r\n        ]\r\n\r\n        const W = this.legend.wall\r\n        const S = this.legend.space\r\n        const B = this.legend.box\r\n\r\n        this.classLevelMap = []\r\n        this.symbolsLevelMap = []\r\n        this.levelMap = [\r\n            [W, W, W, W, W, W, W, W, W, W, W, W, W, W, W],\r\n            [W, S, S, S, B, S, S, S, S, S, S, S, S, S, W],\r\n            [W, S, S, S, B, S, S, S, S, S, S, S, S, S, W],\r\n            [W, S, S, S, B, S, S, S, S, S, S, B, B, B, W],\r\n            [W, S, S, W, W, W, S, S, S, B, S, S, S, S, W],\r\n            [W, S, S, S, S, B, S, S, S, S, S, S, S, S, W],\r\n            [W, S, S, S, S, S, S, S, S, S, S, S, S, S, W],\r\n            [W, S, S, B, B, S, B, B, B, S, S, B, S, S, W],\r\n            [W, S, S, S, S, S, S, S, S, S, S, W, S, S, W],\r\n            [W, W, W, W, W, W, W, W, W, W, W, W, W, W, W]]\r\n\r\n\r\n        this.prepare()\r\n        this.init()\r\n    }\r\n\r\n    prepare() {\r\n        this.createClassInMap()\r\n\r\n        this.spawnPlayer()\r\n        this.spawnAllEnemies()\r\n\r\n        this.isWhiteSpace = this.isWhiteSpace.bind(this)\r\n        this.movePlayerHandler = this.movePlayerHandler.bind(this)\r\n    }\r\n\r\n    init() {\r\n        document.addEventListener('keydown', this.movePlayerHandler)\r\n\r\n        this.moveTimer = setInterval(() => {\r\n            this.player.moved = false\r\n            this.AllBombs.forEach((Bomb) => {\r\n                Bomb.isExploded ? Bomb.decreaseExplosion() : Bomb.decreaseCountdown()\r\n            })\r\n\r\n            this.AllEnemies.forEach(Enemy => {\r\n                Enemy.moved = false\r\n                this.createMoveEnemy(Enemy)\r\n            })\r\n\r\n        }, this.moveDelay)\r\n\r\n    }\r\n\r\n    createSpawnPoint() {\r\n        let x, y\r\n        while (true) {\r\n            x = getRandomRange(1, this.width - 1)\r\n            y = getRandomRange(1, this.height - 1)\r\n            if (this.isWhiteSpace(x, y)) break\r\n        }\r\n        return {x, y}\r\n    }\r\n\r\n    spawnPlayer() {\r\n        const {x, y} = this.createSpawnPoint()\r\n        this.player = new Player(x, y)\r\n    }\r\n\r\n    spawnEnemy() {\r\n        const {x, y} = this.createSpawnPoint()\r\n        this.AllEnemies.push(new Enemy(x, y))\r\n    }\r\n\r\n    spawnAllEnemies() {\r\n        for (let i = 0; i < this.enemiesCount; i++) {\r\n            this.spawnEnemy()\r\n        }\r\n    }\r\n\r\n    isWhiteSpace(x, y) {\r\n        return this.blocks.indexOf(this.classLevelMap[y][x].symbol) === -1\r\n    }\r\n\r\n    safeCheck(x, y) {\r\n        return x > 0 && y > 0 && x < this.width - 1 && y < this.height - 1\r\n    }\r\n\r\n    collisionWith(x, y) {\r\n        try {\r\n            return this.levelMap[y][x]\r\n        } catch (e) {\r\n            throw new Error(\"Check Collision out of the Map\")\r\n        }\r\n    }\r\n\r\n    changeLevelMap(x, y, symbol) {\r\n        this.levelMap[y][x] = symbol\r\n        this.createClassInMap()\r\n    }\r\n\r\n    createMoveEnemy(Enemy) {\r\n        const {mapActions, x ,y} = Enemy\r\n        const rnd = getRandom(Enemy.mapActions.length-1)\r\n        const action = mapActions[rnd].action\r\n\r\n        if (action === Enemy.actionsTypes.moveUp && this.isWhiteSpace(x, y - 1)) {\r\n            Enemy.moveUp()\r\n        }\r\n\r\n        if (action === Enemy.actionsTypes.moveRight && this.isWhiteSpace(x + 1, y)) {\r\n            Enemy.moveRight()\r\n        }\r\n\r\n        if (action === Enemy.actionsTypes.moveDown && this.isWhiteSpace(x, y + 1)) {\r\n            Enemy.moveDown()\r\n        }\r\n\r\n        if (action === Enemy.actionsTypes.moveLeft && this.isWhiteSpace(x - 1, y)) {\r\n            Enemy.moveLeft()\r\n        }\r\n\r\n        if (action === Enemy.actionsTypes.placeBomb) {\r\n            this.AllBombs.push(new Bomb(x, y))\r\n        }\r\n    }\r\n\r\n    movePlayerHandler(event) {\r\n        const {player, keymap, keymapArray, isWhiteSpace} = this\r\n        if (keymapArray.includes(event.code)) {\r\n            const {x, y} = this.player\r\n            if (event.code === keymap.moveUp && isWhiteSpace(x, y - 1)) {\r\n                player.moveUp()\r\n            }\r\n\r\n            if (event.code === keymap.moveRight && isWhiteSpace(x + 1, y)) {\r\n                player.moveRight()\r\n            }\r\n\r\n            if (event.code === keymap.moveDown && isWhiteSpace(x, y + 1)) {\r\n                player.moveDown()\r\n            }\r\n\r\n            if (event.code === keymap.moveLeft && isWhiteSpace(x - 1, y)) {\r\n                player.moveLeft()\r\n            }\r\n\r\n            if (event.code === keymap.placeBomb) {\r\n                this.AllBombs.push(new Bomb(x, y))\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    deleteFinishedBobs() {\r\n        this.AllBombs = this.AllBombs.filter((Bomb) => {\r\n            if(Bomb.explosionFinish) this.changeLevelMap(Bomb.x, Bomb.y, this.legend.space)\r\n            return !Bomb.explosionFinish\r\n        })\r\n    }\r\n\r\n    createClassInMap() {\r\n        const {legend} = this\r\n        this.classLevelMap = this.levelMap.map((row, y) => {\r\n            return row.map((item, x) => {\r\n                switch (item) {\r\n                    case legend.player: {\r\n                        return new Player(x, y)\r\n                    }\r\n                    case legend.wall: {\r\n                        return new Wall(x, y)\r\n                    }\r\n                    case legend.space: {\r\n                        return new WhiteSpace(x, y)\r\n                    }\r\n                    case legend.box: {\r\n                        return new Box(x, y)\r\n                    }\r\n                    case legend.bomb: {\r\n                        return new Bomb(x, y)\r\n                    }\r\n                    default: {\r\n                        throw new Error(`CreateClassInMap don't implement ${item}`)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    transformLevelToSymbol() {\r\n        const {legend} = this\r\n        this.symbolsLevelMap = this.classLevelMap.map((row) => {\r\n            return row.map((item) => {\r\n                return item.symbol\r\n            })\r\n        })\r\n\r\n        this.symbolsLevelMap.forEach(row => row.push(legend.wrap))\r\n    }\r\n\r\n    renderGame() {\r\n        this.transformLevelToSymbol()\r\n        this.renderBombs()\r\n        this.renderPlayer()\r\n        this.renderEnemies()\r\n    }\r\n\r\n\r\n    renderPlayer() {\r\n        const {x, y, symbol, inBombSymbol} = this.player\r\n        if (this.symbolsLevelMap[y][x] === this.legend.bomb) {\r\n            this.symbolsLevelMap[y][x] = inBombSymbol\r\n        } else this.symbolsLevelMap[y][x] = symbol\r\n    }\r\n\r\n    renderEnemies() {\r\n        this.AllEnemies = this.AllEnemies.filter((Enemy) => Enemy.isAlive)\r\n\r\n        this.AllEnemies.forEach((Enemy) => {\r\n            const {x, y, symbol, inBombSymbol} = Enemy\r\n            if (this.symbolsLevelMap[y][x] === this.legend.bomb) {\r\n                this.symbolsLevelMap[y][x] = inBombSymbol\r\n            } else this.symbolsLevelMap[y][x] = symbol\r\n        })\r\n    }\r\n\r\n\r\n    renderBombs() {\r\n        this.deleteFinishedBobs()\r\n        this.AllBombs.forEach((Bomb) => {\r\n            const {x, y, symbol, explSymbol} = Bomb\r\n            this.changeLevelMap(x,y, symbol)\r\n            if (Bomb.isExploded) {\r\n                if (!Bomb.drawedMap) this.drawMapExplosion(Bomb)\r\n\r\n                Bomb.mapExploded.forEach((exp => {\r\n                    this.symbolsLevelMap[exp.y][exp.x] = explSymbol\r\n\r\n                    if (exp.x === this.player.x && exp.y === this.player.y) {\r\n                        this.gameOver = true\r\n                        this.player.isAlive = false\r\n                    }\r\n\r\n                    this.AllEnemies.forEach(Enemy => {\r\n                        if (exp.x === Enemy.x && exp.y === Enemy.y) {\r\n                            Enemy.isAlive = false\r\n                        }\r\n                    })\r\n                }))\r\n            }\r\n            this.symbolsLevelMap[y][x] = symbol\r\n        })\r\n\r\n    }\r\n\r\n    drawMapExplosion(Bomb) {\r\n        const {x, y, _sizeExplosion, createPoint} = Bomb\r\n\r\n        let matchEntityAtUp = false\r\n        let matchEntityAtRight = false\r\n        let matchEntityAtDown = false\r\n        let matchEntityAtLeft = false\r\n\r\n        for (let i = 1; i <= _sizeExplosion; i++) {\r\n            [\r\n                {dx: 0, dy: 1, stopExplosion: matchEntityAtUp, dir: \"Up\"},\r\n                {dx: 1, dy: 0, stopExplosion: matchEntityAtRight, dir: \"Right\"},\r\n                {dx: 0, dy: -1, stopExplosion: matchEntityAtDown, dir: \"Down\"},\r\n                {dx: -1, dy: 0, stopExplosion: matchEntityAtLeft, dir: \"Left\"}\r\n            ].forEach(({dx, dy, stopExplosion, dir}) => {\r\n                const eX = x + dx * i\r\n                const eY = y + dy * i\r\n\r\n                if (this.safeCheck(eX, eY)) {\r\n                    const Entity = this.collisionWith(eX, eY)\r\n\r\n                    const isWhiteSpace = Entity === this.legend.space\r\n                    const isBox = Entity === this.legend.box\r\n\r\n                    if (!isWhiteSpace && !stopExplosion) {\r\n                        if (dir === \"Up\") matchEntityAtUp = true\r\n                        if (dir === \"Right\") matchEntityAtRight = true\r\n                        if (dir === \"Down\") matchEntityAtDown = true\r\n                        if (dir === \"Left\") matchEntityAtLeft = true\r\n                    }\r\n\r\n                    if (isBox && !stopExplosion) {\r\n                        this.changeLevelMap(eX, eY, this.legend.space)\r\n                    }\r\n\r\n                    if (this.isWhiteSpace(eX, eY) && !stopExplosion) {\r\n                        Bomb.mapExploded.push(createPoint(eX, eY))\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        Bomb.drawedMap = true\r\n    }\r\n\r\n\r\n    render() {\r\n        this.renderGame()\r\n\r\n        const map = this.symbolsLevelMap.map(row => row.join('')).join('')\r\n        return `${map}`\r\n    }\r\n\r\n    destroy() {\r\n        clearInterval(this.moveTimer)\r\n        document.removeEventListener('keydown', this.movePlayerHandler)\r\n    }\r\n\r\n}","import React from 'react';\nimport './App.css';\n\nimport {Game as Bomberman} from \"./Classes/Game\";\n\nconst config = {\n    mapWidth: 15,\n    mapHeight: 10,\n    enemiesCount: 3,\n    moveDelay: 500,\n    keymap: {\n        moveUp: \"KeyW\",\n        moveRight: \"KeyD\",\n        moveDown: \"KeyS\",\n        moveLeft: \"KeyA\",\n        placeBomb: \"Space\"\n    }\n}\n\n\nconst Game = new Bomberman(config)\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {time: Date.now()};\n    }\n\n    componentDidMount() {\n           this.interval = setInterval(() => this.setState({time: Date.now()}), 50);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>{Game.gameOver ? \"Game Over\" : \"Fight\"}</h2>\n                <div className=\"app\">\n                    <pre>\n                        {Game.render()}\n                    </pre>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}